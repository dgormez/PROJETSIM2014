/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projetg2;


/**
 *
 * @author INFO-H-400
 */

import be.belgium.eid.eidlib.BeID;
import com.googlecode.javacv.FrameGrabber.Exception;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import org.dcm4che2.data.DicomObject;
import org.dcm4che2.data.Tag;
import org.dcm4che2.io.DicomInputStream;


public class Projet_GUI_final extends javax.swing.JFrame {
    private int index;
    public DicomManager MWL;
    List<DicomObject> MWLlist;
    javax.swing.JFileChooser chooser= new javax.swing.JFileChooser();
    
    /**
     * Creates new form Projet_GUI_final
     */
    public Projet_GUI_final() {
        initComponents();
        MWL = new DicomManager();
        Ulb.setIcon(new ImageIcon("Ulb.jpg")); 
        Title.setText("Systèmes d'information médicale : Projet");
        Title.setFont(new Font(Title.getFont().getName(),Title.getFont().getStyle(),24));
        MedicalImage.setIcon(new ImageIcon("Welcome.jpg")); 
        ECHO.setVisible(false);
        SEND.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonSTDMWL = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonPrintMWL = new javax.swing.JButton();
        jButtonCreateCustomMWL = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButtonQueryMod = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButtonPicture = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        MedicalImage = new javax.swing.JLabel();
        SEND = new javax.swing.JButton();
        ECHO = new javax.swing.JButton();
        SelectFile = new javax.swing.JButton();
        Ulb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButtonSTDMWL.setText("Create STD MWL");
        jButtonSTDMWL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSTDMWLActionPerformed(evt);
            }
        });

        jLabel1.setText("Create/print MWL");

        jButtonPrintMWL.setText("Print MWL");
        jButtonPrintMWL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintMWLActionPerformed(evt);
            }
        });

        jButtonCreateCustomMWL.setText("Create Custom  MWL");
        jButtonCreateCustomMWL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateCustomMWLActionPerformed(evt);
            }
        });

        jLabel2.setText("Modality");

        jLabel3.setText("Body Part Examined");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButtonQueryMod.setText("Query MWL");
        jButtonQueryMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQueryModActionPerformed(evt);
            }
        });

        jLabel4.setText("Acquisition");

        jButtonPicture.setText("Take Picture");
        jButtonPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPictureActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonPrintMWL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCreateCustomMWL, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(56, 56, 56))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))
                            .addComponent(jButtonSTDMWL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonQueryMod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jLabel1))
                            .addComponent(jButtonPicture, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSTDMWL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPrintMWL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCreateCustomMWL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQueryMod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPicture)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RCP", jPanel1);

        Title.setText("        Projet : Systèmes d'information médicale ");

        SEND.setText("C-SEND");
        SEND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SENDActionPerformed(evt);
            }
        });

        ECHO.setText("C-ECHO");
        ECHO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECHOActionPerformed(evt);
            }
        });

        SelectFile.setText("Select File");
        SelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectFileActionPerformed(evt);
            }
        });

        Ulb.setText("jLabel7");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(MedicalImage, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ECHO)
                            .addComponent(SEND))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Ulb, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(SelectFile)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Ulb, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(226, 226, 226)
                        .addComponent(SEND)
                        .addGap(64, 64, 64)
                        .addComponent(ECHO))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MedicalImage, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(SelectFile)
                .addContainerGap())
        );

        jTabbedPane1.addTab("PACS Storage", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSTDMWLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSTDMWLActionPerformed
        // TODO add your handling code here:
        MWL.creeMWL();
    }//GEN-LAST:event_jButtonSTDMWLActionPerformed

    private void jButtonPrintMWLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintMWLActionPerformed
        // TODO add your handling code here:
        MWLlist = MWL.queryMWL("","");
        int[] tagPathName = new int[] {Tag.PatientName};
        int[] tagPathMod = new int[] {Tag.Modality};
        MWLlist = MWL.queryMWL(jTextField1.getText(),jTextField2.getText());
        String toPrint= "";
        index = 0;
        jComboBox1.removeAllItems();
    
        //affiche la MWL dans le TextArea :
             for (int i = 0; i < MWLlist.size(); i++) {
                 toPrint = toPrint +MWLlist.get(i).toString()+"\n" + "\n";
                    jComboBox1.addItem(MWLlist.get(i).getString(tagPathName)+" "+MWLlist.get(i).getString(tagPathMod));
                }
        jTextArea1.setText(toPrint);
        MWLlist = MWL.queryMWL("","");
    }//GEN-LAST:event_jButtonPrintMWLActionPerformed

    private void jButtonCreateCustomMWLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateCustomMWLActionPerformed
        // TODO add your handling code here:
         BeID eID = new BeID(true);
        String mod = jTextField1.getText();
        String part = jTextField2.getText();
        if (mod == null | mod == ""){
         mod = "CT";
    }
        if(part==null| part == " "){
            part = "unspecified";
        }
        MWL.createCustomMWL(eID,mod,part);
    }//GEN-LAST:event_jButtonCreateCustomMWLActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButtonQueryModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQueryModActionPerformed
        // TODO add your handling code here:
         MWLlist = MWL.queryMWL(jTextField1.getText(),jTextField2.getText());
    
        int[] tagPathName = new int[] {Tag.PatientName};
        int[] tagPathMod = new int[] {Tag.Modality};

        String toPrint= "";
        index =0;
        jComboBox1.removeAllItems();
            //affiche la MWL dans le TextArea :
             for (int i = 0; i < MWLlist.size(); i++) {
                    toPrint = toPrint+ Integer.toString(i)+ " " + MWLlist.get(i).getString(tagPathName) + "  " + MWLlist.get(i).getString(tagPathMod) +  "\n";
                    jComboBox1.addItem(MWLlist.get(i).getString(tagPathName)+" "+ MWLlist.get(i).getString(tagPathMod));
                }
                jTextArea1.setText(toPrint);
    }//GEN-LAST:event_jButtonQueryModActionPerformed

    private void jButtonPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPictureActionPerformed
        // TODO add your handling code here:
        int i = jComboBox1.getSelectedIndex();
        //jComboBox1.removeItemAt(i);
        DicomCreate fileDCM = new DicomCreate(MWLlist.get(i),index);
        index++;
        try {
            fileDCM.takePicture();
            //fileDCM.createDicomFile();
        } catch (Exception ex) {
            Logger.getLogger(ProjetG2_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPictureActionPerformed

    private void SelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectFileActionPerformed
                DicomInputStream distr = null;      
               
                
                chooser.setVisible(true);
                chooser.setCurrentDirectory(new java.io.File("."));
        
                if (chooser.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
                    ECHO.setVisible(true);
                    SEND.setVisible(true);
                    MedicalImage.setIcon(new ImageIcon(chooser.getSelectedFile().getAbsolutePath()+ ".png")); 
                    System.out.println(chooser.getSelectedFile().getName()+ ".png");

                    try {
                        distr = new DicomInputStream(chooser.getSelectedFile());
                    } catch (IOException ex) {
                        Logger.getLogger(Projet_GUI_final.class.getName()).log(Level.SEVERE, null, ex);       
                    }
                }
            else {
                System.out.println("No Selection ");
            }

    }//GEN-LAST:event_SelectFileActionPerformed

    private void SENDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SENDActionPerformed
        DcmSnd dcmsend = new DcmSnd("DCMSEND");        
        // SEND //
        
        // On retrouve les informations nécessaires dans le main de DcmSnd.java. Le code utile est obtenu en retirant toutes les commandes.

        String remoteAE = "CT";
        String[] calledAETAddress = split(remoteAE, '@');
        dcmsend.setCalledAET(calledAETAddress[0]);
        if (calledAETAddress[1] == null) { 
            dcmsend.setRemoteHost("localhost");
            dcmsend.setRemotePort(104);// port Dicom par défaut.
        } else {
            String[] hostPort = split(calledAETAddress[1], ':');
            dcmsend.setRemoteHost(hostPort[0]);
            dcmsend.setRemotePort(104);
        }
        
        System.out.println("Scanning files to send");
        long t1 = System.currentTimeMillis();
        //for (int i = 1, n = argList.size(); i < n; ++i)
        
        try{
        dcmsend.addFile(new File(chooser.getSelectedFile().getPath()));
        } catch( java.lang.Exception e) {
            e.printStackTrace();
            System.out.println(chooser.getSelectedFile().getPath());
            System.out.println("addFile est correct");
            
        }
        
        
        long t2 = System.currentTimeMillis();
        if (dcmsend.getNumberOfFilesToSend() == 0) {
            System.exit(2);
        }
        System.out.println("\nScanned " + dcmsend.getNumberOfFilesToSend()
                + " files in " + ((t2 - t1) / 1000F) + "s (="
                + ((t2 - t1) / dcmsend.getNumberOfFilesToSend()) + "ms/file)");
        dcmsend.configureTransferCapability();
        
                
           // Ici démarre l'envoie. La boucle while assure l'envoie complet.
        
        
                while( dcmsend.getLastSentFile() < dcmsend.getNumberOfFilesToSend() ) {
	        try {
	            dcmsend.start();
	        } catch (java.lang.Exception e) {
	            System.err.println("ERROR: Failed to start server for receiving " +
	                    "Storage Commitment results:" + e.getMessage());
	            System.exit(2);
	        }
	        try {
	            t1 = System.currentTimeMillis();
	            try {
	                dcmsend.open();
	            } catch (java.lang.Exception e) {
                        System.out.println(" Probleme connection PACS");
	                System.err.println("ERROR: Failed to establish association:"
	                        + e.getMessage());
	                System.exit(2);
	            } finally{}
	            t2 = System.currentTimeMillis();
	            System.out.println("Connected to " + remoteAE + " in " 
	                    + ((t2 - t1) / 1000F) + "s");
	    
	            //t1 = System.currentTimeMillis();
	            dcmsend.send();
	            //t2 = System.currentTimeMillis();
	            //prompt(CStore, (t2 - t1) / 1000F);
	            if (dcmsend.isStorageCommitment()) {
	                t1 = System.currentTimeMillis();
	                if (dcmsend.commit()) {
	                    t2 = System.currentTimeMillis();
	                    System.out.println("Request Storage Commitment from " 
	                            + remoteAE + " in " + ((t2 - t1) / 1000F) + "s");
	                    System.out.println("Waiting for Storage Commitment Result..");
	                    try {
	                        DicomObject cmtrslt = dcmsend.waitForStgCmtResult();
	                        //t1 = System.currentTimeMillis();
	                        //promptStgCmt(cmtrslt, ((t1 - t2) / 1000F));
	                    } catch (InterruptedException e) {
	                        System.err.println("ERROR:" + e.getMessage());
	                    }
	                }
	             }
	            dcmsend.close();
	            System.out.println("Released connection to " + remoteAE);
                   
	        } finally {
	            dcmsend.stop();
	        }
        }
                
    }//GEN-LAST:event_SENDActionPerformed

    private void ECHOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECHOActionPerformed
         DcmEcho dcmecho = new DcmEcho("DCMECHO");
        String remoteAE = "CT";
        String[] calledAETAddress = split(remoteAE, '@');
        dcmecho.setCalledAET("CT", false); // setCalledAET demande un booléen en second paramètre. Il faut qu'il soit faux sinon on change le AETitle
        /*if (calledAETAddress[1] == null) {
            dcmecho.setRemoteHost("localhost");
            //dcmecho.setRemoteHost("192.168.3.112");
            dcmecho.setRemotePort(104);
        } else {
            //String[] hostPort = split(calledAETAddress[1], ':');
            dcmecho.setRemoteHost("localhost");
            dcmecho.setRemotePort(104);
        }*/
        dcmecho.setRemoteHost("localhost");
        dcmecho.setRemotePort(104);
        // On supprime la partie relative aux commandes
        long t1 = System.currentTimeMillis();
        try {
            dcmecho.open();
        } catch (java.lang.Exception e) {
            System.out.println("Echec de l'association avec PACS");
            System.err.println("ERROR: Failed to establish association:"
                    + e.getMessage());
            System.exit(2);
        } 
        long t2 = System.currentTimeMillis();
        System.out.println("Connected to " + remoteAE + " in "
                + ((t2 - t1) / 1000F) + "s");
        
        try {
              dcmecho.echo();

        } catch (IOException e) {
                e.printStackTrace();
                System.out.println("Erreur dcmecho.echo");
        } catch (InterruptedException e) {}
        try {
            dcmecho.close();
        } catch (InterruptedException ex) {
            Logger.getLogger(Projet_GUI_final.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Erreur dcmecho.close");
        }
  

    }//GEN-LAST:event_ECHOActionPerformed

    
        private static String[] split(String s, char delim) {
    String[] s2 = { s, null };
    int pos = s.indexOf(delim);
    if (pos != -1) {
        s2[0] = s.substring(0, pos);
        s2[1] = s.substring(pos + 1);
    }
    return s2;
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Projet_GUI_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Projet_GUI_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Projet_GUI_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Projet_GUI_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Projet_GUI_final().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ECHO;
    private javax.swing.JLabel MedicalImage;
    private javax.swing.JButton SEND;
    private javax.swing.JButton SelectFile;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Ulb;
    private javax.swing.JButton jButtonCreateCustomMWL;
    private javax.swing.JButton jButtonPicture;
    private javax.swing.JButton jButtonPrintMWL;
    private javax.swing.JButton jButtonQueryMod;
    private javax.swing.JButton jButtonSTDMWL;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
